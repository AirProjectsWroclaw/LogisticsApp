<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title — moja aplikacja platformy ASP.NET</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
            crossorigin="anonymous"></script>
    <style>
        #map {
            height: 100%;
        }
        html, body {
            height: 100%;
            margin: 0;
            /*padding: 0;*/
        }
    </style>
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Aplikacja logistyczna", "AppForm", "App", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Aplikacja", "AppForm", "App")</li>
                    <li>@Html.ActionLink("Lista miast", "Index", "City")</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()

        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year — moja aplikacja platformy ASP.NET</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    @*<div id="map"></div>*@

    <script>
        var data;
        // Where all the fun happens
        function initMap(cities) {

            // Google has tweaked their interface somewhat - this tells the api to use that new UI
            google.maps.visualRefresh = true;
            var Tunisie = new google.maps.LatLng(36.81881, 10.16596);

            // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
            var mapOptions = {
                zoom: 8,
                center: Tunisie,
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
            };

            // This makes the div with id "map_canvas" a google map
            var map = new google.maps.Map(document.getElementById("map"), mapOptions);

            // a sample list of JSON encoded data of places to visit in Tunisia
            // you can either make up a JSON list server side, or call it from a controller using JSONResult
            data = [
                { "Id": 1, "PlaceName": "Zaghouan", "GeoLong": "36.401081", "GeoLat": "10.16596" },
                { "Id": 2, "PlaceName": "Hammamet ", "GeoLong": "36.4", "GeoLat": "10.616667" },
                { "Id": 3, "PlaceName": "Sousse", "GeoLong": "35.8329809", "GeoLat": "10.63875" },
                { "Id": 4, "PlaceName": "Sfax", "GeoLong": "34.745159", "GeoLat": "10.7613" }
            ];

            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(data, function (i, item) {
                //var marker = new google.maps.Marker({
                //    'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                //    'map': map,
                //    'title': item.PlaceName
                //});

                // Make the marker-pin blue!
                //marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                // put in some information about each json object - in this case, the opening hours.
                var infowindow = new google.maps.InfoWindow({
                    content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
                });

                // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                //google.maps.event.addListener(marker, 'click', function () {
                //    infowindow.open(map, marker);
                //});

            })

            var geocoder = new google.maps.Geocoder();
            //var cities = [];
            //cities[0] = "Łódź [19,4559833, 51,7592485]";
            for (var j = 0; j < cities.Trucks.length; j++) {
                geocodeAddress(geocoder, map, cities.Trucks[j], j);
            }
        }

        function geocodeAddress(geocoder, resultsMap, cities, j) {

            var markers = [];
            

                var icons = [];
                icons[0] = "http://maps.google.com/mapfiles/ms/icons/blue-dot.png";
                icons[1] = "http://maps.google.com/mapfiles/ms/icons/yellow-dot.png";
                icons[2] = "http://maps.google.com/mapfiles/ms/icons/red-dot.png";

                for (var i = 0; i < cities.Cities.length; i++) {
                    geocoder.geocode({ 'address': cities.Cities[i] }, function (results, status) {
                 
                        if (status === 'OK') {
                            resultsMap.setCenter(results[0].geometry.location);
                            markers[j] = new google.maps.Marker({
                                map: resultsMap,
                                position: results[0].geometry.location,
                                icon: icons[j]
                            });


                        } else {
                            alert('Geocode was not successful for the following reason: ' + status);
                        }
                    });
                

                 }
        }
    </script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfaJCHUYqCYps9Z1vU2fFkJuL1KHfWtME&callback=initMap" async defer></script>


</body>
</html>
