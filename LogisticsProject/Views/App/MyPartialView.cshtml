

@{
    ViewBag.Title = "MyPartialView";
}

<style>
    #map {
        height: 100%;
    }

    html, body {
        height: 100%;
        margin: 0;
        /*padding: 0;*/
    }
</style>
<div id="map"></div>

<script>
    for (var i = 0; i < myObj.Trucks.length; i++) {
        console.log(myObj.Trucks[i].Cities);
    }
    // Where all the fun happens
    function initMap() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var Wroclaw = new google.maps.LatLng(51.1, 17.03333);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 8,
            center: Wroclaw,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map"), mapOptions);

        // a sample list of JSON encoded data of places to visit in Tunisia
        // you can either make up a JSON list server side, or call it from a controller using JSONResult
        /*var data = [
            { "Id": 1, "PlaceName": "Zaghouan", "GeoLong": "36.401081", "GeoLat": "10.16596" },
            { "Id": 2, "PlaceName": "Hammamet ", "GeoLong": "36.4", "GeoLat": "10.616667" },
            { "Id": 3, "PlaceName": "Sousse", "GeoLong": "35.8329809", "GeoLat": "10.63875" },
            { "Id": 4, "PlaceName": "Sfax", "GeoLong": "34.745159", "GeoLat": "10.7613" }
        ];

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.PlaceName
            });

            // Make the marker-pin blue!
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

        })*/
        var geocoder = new google.maps.Geocoder();

        for (var j = 0; j < myObj.Trucks.length; j++) {
            geocodeAddress(geocoder, map, myObj.Trucks[j], j);
        }

    }
    function geocodeAddress(geocoder, resultsMap, cities, j) {
    var markers = [];


    var icons = [];
    icons[0] = "http://maps.google.com/mapfiles/ms/icons/blue-dot.png";
    icons[1] = "http://maps.google.com/mapfiles/ms/icons/yellow-dot.png";
    icons[2] = "http://maps.google.com/mapfiles/ms/icons/red-dot.png";

    for (var i = 0; i < cities.Cities.length; i++) {
        geocoder.geocode({ 'address': cities.Cities[i] }, function (results, status) {

            if (status === 'OK') {
                resultsMap.setCenter(results[0].geometry.location);
                markers[j] = new google.maps.Marker({
                    map: resultsMap,
                    position: results[0].geometry.location,
                    icon: icons[j]
                });


            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });


    }
    }
    /*function geocodeAddress(geocoder, resultsMap, cities) {

        for (var j = 0; j < cities.Trucks.length; j++) {

            for (var i = 0; i < cities.Trucks[j].Cities.length; i++) {
                geocoder.geocode({ 'address': cities.Trucks[j].Cities[i] }, function (results, status) {
                    if (status === 'OK') {
                        resultsMap.setCenter(results[0].geometry.location);
                        var marker = new google.maps.Marker({
                            map: resultsMap,
                            position: results[0].geometry.location
                        });
                        if (j = 0) marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');
                        if (j = 1) marker.setIcon('http://maps.google.com/mapfiles/ms/icons/yellow-dot.png');
                        if (j = 2) marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');
                        if (j = 3) marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png');


                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }

        }
    }*/



</script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=KLUCZAPI&callback=initMap" async defer></script>